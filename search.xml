<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>js获取视口和文档高度</title>
      <link href="/blog/2019/09/07/js%E8%8E%B7%E5%8F%96%E8%A7%86%E5%8F%A3%E5%92%8C%E6%96%87%E6%A1%A3%E9%AB%98%E5%BA%A6/"/>
      <url>/blog/2019/09/07/js%E8%8E%B7%E5%8F%96%E8%A7%86%E5%8F%A3%E5%92%8C%E6%96%87%E6%A1%A3%E9%AB%98%E5%BA%A6/</url>
      
        <content type="html"><![CDATA[<h4 id="js获取视口和文档高度"><a href="#js获取视口和文档高度" class="headerlink" title="js获取视口和文档高度"></a>js获取视口和文档高度</h4><table><thead><tr><th align="center">项目</th><th align="center">内容</th></tr></thead><tbody><tr><td align="center">clientHeight</td><td align="center">content area + padding</td></tr><tr><td align="center">offsetHeight</td><td align="center">border + content area + padding</td></tr><tr><td align="center">scrollHeight</td><td align="center">没有滚动条（内容展开时）的高度</td></tr></tbody></table><blockquote><p>body和html分别表示document.body和document.documentElement</p></blockquote><a id="more"></a><p>html.clientHeight 返回视口高度<br>html.offsetHeight 返回<html>元素的高度，在没有给<html>元素设置height时，可以理解为文档高度。<strong><em>ie6-8返回视口高度</em></strong><br>html.scrollHeight    总是返回文档高度。<strong><em>在firefox，opera，ie8中，返回文档高度和视口高度中较大的那个</em></strong><br>body.clientHeight和body.offsetHeight    返回<body>元素的高度（近似于文档高度），如果<body>设置height，则返回设定的值（ie6仍然返回<body>内元素的总高度）。<br>body.scrollHeight    总是返回文档高度。<strong><em>在webkit中，返回文档高度和视口高度中较大的那个。</em></strong></body></body></body></html></html></p><p>总之，获取视口高度用html.clientHeight,IE6-8还可以用html.offsetHeight。获取文档高度可以用html.scrollHeight或body.scrollHeight。</p><p>另外，​​现代浏览器中还有一个属性window.innerHeight可以用来获取视口高度，IE9+才开始支持。得到的高度有时候会多十几个像素，innerHeight把滚动条的高度也计算在内。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 获取视口高度</span></span><br><span class="line"><span class="keyword">let</span> viewportH = <span class="built_in">window</span>.innerHeight || <span class="built_in">document</span>.documentElement.clientHeight;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取文档高度</span></span><br><span class="line"><span class="keyword">let</span> docH = <span class="built_in">document</span>.body.scrollHeight;</span><br><span class="line"><span class="comment">// 或者</span></span><br><span class="line"><span class="keyword">let</span> docH = <span class="built_in">document</span>.documentElement.scrollHeight</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
